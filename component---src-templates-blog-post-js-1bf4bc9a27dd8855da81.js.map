{"version":3,"sources":["webpack:///./src/components/bioshare.js","webpack:///./src/templates/blog-post.js"],"names":["BioShare","title","slug","socialShare","site","siteMetadata","style","width","height","href","twitter","handle","website","onclick","e","window","open","pageQuery","BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","previous","next","featuredImgFluid","frontmatter","featuredImage","childImageSharp","fluid","description","excerpt","marginTop","rhythm","marginBottom","scale","display","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","rel"],"mappings":"idAsDeA,EAlDE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAmBnBC,EAlBM,OAkBeC,KAAKC,aAA1BF,YAER,OACQ,6BACI,wBAAIG,MAAO,CAAC,aAAc,SACtB,4BACI,uBAAGA,MAAO,CAACC,MAAO,OAAQC,OAAQ,QAASC,KAAI,kCAAoCR,EAApC,SAAkDE,EAAYO,QAAQC,OAAtE,QAAoFR,EAAYO,QAAQE,QAAUV,EAAQW,QAAS,SAACC,GAAwE,OAAjEC,OAAOC,W,GAAUP,KAAM,gBAAiB,yBAAgC,IAAlQ,wB,wBC2DPQ,GAFEC,UA5EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKf,KAAKC,aAAaJ,MACjCwB,EAAyBL,EAAzBK,SAAUC,EAAeN,EAAfM,KAAMxB,EAASkB,EAATlB,KAClByB,EAAmBL,EAAKM,YAAYC,cAAcC,gBAAgBC,MAExE,OACE,kBAAC,IAAD,CAAQV,SAAUA,EAAUpB,MAAOuB,GACjC,kBAAC,IAAD,CACEvB,MAAOqB,EAAKM,YAAY3B,MACxB+B,YAAaV,EAAKM,YAAYI,aAAeV,EAAKW,UAEpD,iCACE,gCACE,wBACE3B,MAAO,CACL4B,UAAWC,YAAO,GAClBC,aAAc,IAGfd,EAAKM,YAAY3B,OAEpB,uBACEK,MAAK,iBACA+B,aAAM,IADN,CAEHC,QAAQ,QACRF,aAAcD,YAAO,MAGtBb,EAAKM,YAAYW,MAEpB,kBAAC,IAAD,CAAKR,MAAOJ,KAEd,6BAASa,wBAAyB,CAAEC,OAAQnB,EAAKoB,QACjD,wBACEpC,MAAO,CACL8B,aAAcD,YAAO,MAGzB,kBAAC,EAAD,CAAUlC,MAAOqB,EAAKM,YAAY3B,MAAOC,KAAMA,IAChD,6BACC,wBACEI,MAAO,CACLgC,QAAQ,OACRK,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGrB,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAASuB,OAAO9C,KAAM+C,IAAI,QAApC,KACKxB,EAASG,YAAY3B,QAI9B,4BACGyB,GACC,kBAAC,OAAD,CAAMqB,GAAIrB,EAAKsB,OAAO9C,KAAM+C,IAAI,QAC7BvB,EAAKE,YAAY3B,MADpB,UASR,gCACI,kBAAC,IAAD,SASY","file":"component---src-templates-blog-post-js-1bf4bc9a27dd8855da81.js","sourcesContent":["import React from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n\nconst BioShare = ({ title, slug }) => {\n    const data = useStaticQuery(graphql`\n    query BioShareQuery {\n      site {\n        siteMetadata {\n          socialShare {\n            twitter {\n              handle\n              website\n            }\n            facebook\n            github\n          }\n        }\n      }\n    }\n  `)\n\n\nconst { socialShare } = data.site.siteMetadata\n\nreturn(\n        <div>\n            <ul style={{'list-style': 'none'}}>\n                <li>\n                    <a style={{width: '20px', height: '20px'}} href={`https://twitter.com/share?text=${title} via @${socialShare.twitter.handle}&url=${socialShare.twitter.website}${slug}`} onclick={(e) => {window.open(this.href, 'twitter-share', 'width=550,height=235'); return false}}>\n                    Share on Twitter\n                    </a>\n                </li>\n                {/* <li>\n                    <a href=\"https://news.ycombinator.com/submitlink?u=HTTP://YOUR_URL.COM&t=YOUR CONTENT\" onclick=\"window.open(this.href, 'hn-share', 'width=550,height=350'); return false;\">\n                    Share on Hacker News\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://pinterest.com/pin/create/button?url=HTTPS://YOUR_WEBSITE.COM&description=SOME DESCRIPTION &media=https://YOUR_SITE.com/IMAGE.JPG\">\n                    Share on Pinterest\n                    </a>\n                </li> \n                <li>\n                    <a href=\"https://www.facebook.com/sharer/sharer.php?u=HTTPS://YOUR_URL.COM\" onclick=\"window.open(this.href, 'facebook-share','width=580,height=296'); return false;\">\n                     Share on Facebook\n                    </a>\n                </li>\n                */}\n            </ul>\n        </div>\n)\n}\n\nexport default BioShare","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport BioShare from \"../components/bioshare\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const { previous, next, slug } = pageContext\n  const featuredImgFluid = post.frontmatter.featuredImage.childImageSharp.fluid\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h1\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <Img fluid={featuredImgFluid} />\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <BioShare title={post.frontmatter.title} slug={slug} />\n       <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n\n      </article>\n      <footer>\n          <Bio />\n      </footer>\n      \n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fluid(maxWidth: 800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}